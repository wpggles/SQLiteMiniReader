//
// @Project : SQLiteMiniReader
// @File    : SQLiteRecord.h
// @Date    : 2016-02-20
// @Author  : wPgg1es
//

#ifndef _SQLITE_RECORD_H_
#define _SQLITE_RECORD_H_

#include "../Cell/SQLiteTableCell.h"
#include "../Cell/SQLiteDataCell.h"
#include "../Traverse/SQLiteTable.h"

class SQLiteMiniReader;

//SQLite记录对象
class SQLiteRecord
{
private:
    //sql创建语句的字段对象
	SQLiteTable * m_SQLiteTable;
    //SQL指向临时的数据单元
    SQLiteDataCell * m_TmpDataCell;
    //为了调用私有构造，声明SQLiteReader为友元
    friend SQLiteMiniReader;

private:
    /************************************************************************
    * 功能：私有构造。
    * 参数：
    *       tableCell [IN] -> 表单元对象。
    * 返回：无。
    ************************************************************************/
    SQLiteRecord(IN SQLiteTableCell * tableCell);

	/************************************************************************
	* 功能：私有析构。
	* 参数：无。
	* 返回：无。
	************************************************************************/
	~SQLiteRecord();

    /************************************************************************
    * 功能：设置临时用于传递的一条数据记录。
    * 参数：
    *       cell [IN] -> 数据单元。
    * 返回：无。
    * 备注：函数不会维护传递的数据单元，销毁由调用者处理。
    ************************************************************************/
    void SetTmpDataCell(IN SQLiteDataCell * cell);

public:
    /************************************************************************
    * 功能：获取字段数量。
    * 参数：无。
    * 返回：字段数量。
    ************************************************************************/
    UINT GetFieldCount();

    /************************************************************************
    * 功能：获取指定字段的字段名称。
    * 参数：
    *       index [IN] -> 指定字段的索引。
    * 返回：字段名称的字符串。
    * 备注：返回值不可修改，也不用单独释放。
    ************************************************************************/
    const char * GetFieldName(IN UINT index);

    /************************************************************************
    * 功能：获取指定字段的字段类型。
    * 参数：
    *       index [IN] -> 指定字段的索引。
    * 返回：字段类型的字符串。
    * 备注：返回值不要修改，也不要单独释放。
    ************************************************************************/
    const char * GetFeildTypeName(IN UINT index);

    /************************************************************************
    * 功能：获取指定字段在SQLite中的近似类型。
    * 参数：
    *       index [IN] -> 指定字段的索引。
    * 返回：指定字段在SQLite中的近似类型。
    ************************************************************************/
    SQLiteDataType GetFeildSimilarType(IN UINT index);

    /************************************************************************
    * 功能：获取指定字段的属性。
    * 参数：
    *       index      [IN] -> 指定字段的索引。
    *       properties [IN] -> 要检查的属性(除SFP_NOP外可以使用'|'连接)。
    * 返回：指定的属性存在返回TRUE，只要有一个不存在就返回FALSE。
    * 注意：这里properties的属性传递SQLiteFeildProperty类型即可。
    ************************************************************************/
    BOOL GetFeildProperty(IN UINT index, IN int properties);

    /////////////////////////////////////////////////////////////////////////

    /************************************************************************
    * 功能：获取当前单元在所在表中的RowID。
    * 参数：无。
    * 返回：RowID。
    ************************************************************************/
    ULONG GetRowID();

    /************************************************************************
    * 功能：获取指定字段的布尔型数据。
    * 参数：
    *       index [IN] -> 指定的字段索引。
    * 返回：布尔值。
    * 备注：小于256并且的非0为TRUE，否则为FALSE。
    ************************************************************************/
    BOOL GetBoolean(IN int index);

    /************************************************************************
    * 功能：获取指定字段的整数型数据。
    * 参数：
    *       index [IN] -> 指定的字段索引。
    * 返回：转换后的整数。
    ************************************************************************/
    LONG GetInteger(IN int index);

    /************************************************************************
    * 功能：获取指定字段的浮点型数据。
    * 参数：
    *       index [IN] -> 指定的字段索引。
    * 返回：转换后的浮点数。
    ************************************************************************/
    double GetReal(IN int index);

    /************************************************************************
    * 功能：获取指定字段的文本型数据。
    * 参数：
    *       index     [IN]  -> 指定的字段索引。
    *       bufferPtr [OUT] -> 存储返回数据的指针。
    * 返回：文本长度。
    * 注意：bufferPtr 只需要一个字符串指针，函数内申请空间，使用完要释放掉。
    ************************************************************************/
    UINT GetText(IN int index, OUT char * & bufferPtr);

    /************************************************************************
    * 功能：获取指定字段的二进制型数据。
    * 参数：
    *       index     [IN]  -> 指定的字段索引。
    *       bufferPtr [OUT] -> 存储返回数据的指针。
    * 返回：二进制型数据长度。
    * 注意：bufferPtr 只需要一个BYTE指针，函数内申请空间，使用完要释放掉。
    ************************************************************************/
    UINT GetBLOB(IN int index, OUT BYTE * & bufferPtr);
};

#endif